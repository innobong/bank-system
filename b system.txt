package com.eviro.assessment.gradetool.BonginkosiDladla


// withdraw function
void withdraw()
    {
        do
        {
            try
            {
                System.out.println("**************************************");
                System.out.println(">>>>Enter 0 to terminate Transaction");
                amount = Double.parseDouble(c.readLine(">>>>Enter Amount to Withdraw: \n"));
                retry = 0;
                if(amount <= balance && amount > 0 )
                {
                    balance -=amount;
                    System.out.println("Amount withdrawn successfully");
                    prevBalance = -amount;
                    retry = 0;
                }
                else if(amount > balance)
                {
                    System.out.println("Insufficient Funds, your account has "+balance+" Rupees");
                    retry = 1;
                }
                else if(amount == 0)
                {
                    System.out.println("*****Transaction Terminated!*****  ");
                    retry = 0;
                }
                else if(amount<0)
                {
                    System.out.println("Amount cannot be negative");
                    retry = 1;
                }
            }
            catch(NumberFormatException e)
            {
                System.out.println("***************WARNING!!***********");
                System.out.println("    ENTER AMOUNT ONLY IN DIGITS!\n\n");
                    retry  = 1;
            }
        }while(retry==1);



        
    }

public class savingsAccount
{public String id;
public String accountNum;
public bigDecimal balance;

public void amountToWithdraw(bigDecimal amount)
{balance=balance-amount;
} //withdraw function

}//savings account class

public class currentAccount extends savingsAccount
{public bigDecimal overdraft;

public void withdraw(bigDecimal amount)
{if (amount <= balance + overdraft)
balance = balance - amount
else
system.error.printlin("Insufficient funds for withdrawal")
}//withdraw function 
} //current account class

public void amountToWithdraw(bigDecimal amount)
{balance=balance-amount;
} //withdraw function

}//savings account class

// another method to withdraw

 void withdrawn(String name, int withdrawal)
    {
        if (total >= withdrawal) {
            System.out.println(name + " withdrawn "
                               + withdrawal);
 
            total = total - withdrawal;
            System.out.println("Balance after withdrawal: "
                               + total);
            // Making the thread sleep for 1 second after
            // each withdrawal
 
            // Try block to check for exceptions
            try {
 
                // Making thread t osleep for 1 second
                Thread.sleep(1000);
            }
 
            // Catch block to handle the exceptions
            catch (InterruptedException e) {
 
                // Display the exception along with line
                // number
                // using printStacktrace() method
                e.printStackTrace();
            }
        }
 
        // If the money requested for withdrawal is greater
        // than the balance then deny transaction*/
        else {
 
            // Print statements
            System.out.println(name
                               + " you can not withdraw "
                               + withdrawal);
 
            System.out.println("your balance is: " + total);
 
            // Making the thread sleep for 1 second after
            // each transaction failure
 
            // Try block to check for exceptions
            try {
                Thread.sleep(1000);
            }
 
            catch (InterruptedException e) {
 
                e.printStackTrace();
            }
        }
    }
 


// Main driver method
    public static void main(String[] args)
    {
        // Declaring an object of Bank class and calling the
        // withdarwn and deposit methods with suitable
        // parameters
 
        // Creating object of class 1 inside main()
        Bank obj = new Bank();
 
        // Custom input - Transactions
        obj.withdrawn("1", 20);
        obj.withdrawn("2", 40);
        obj.withdrawn("3", 80);
        obj.withdrawn("4", 40);
    }